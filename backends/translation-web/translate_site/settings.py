"""
Django settings for translate_site project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

SECRET_FILE = BASE_DIR / ".secret_key"
import os
from django.core.management.utils import get_random_secret_key

WEBHOOK_URL = os.getenv("WEBHOOK_URL", "https://discord.com/api/webhooks/1367878924503224320/HjwThN0hlM49t8lxVGuUErQTv2dNo62xfJjl5pIdFQxWU1eQ5CpP5ZcWxxLJTdNC4mYu")   # 빈 값이면 전송 안 함
EXTERNAL_URL = os.getenv("EXTERNAL_URL", "http://localhost:8000")   # 빈 값이면 전송 안 함


if "DJANGO_SECRET_KEY" in os.environ:
    # 1️⃣ 환경 변수 우선
    SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]

elif SECRET_FILE.exists():
    # 2️⃣ 이전에 생성된 파일 재사용
    SECRET_KEY = SECRET_FILE.read_text().strip()

else:
    # 3️⃣ 처음 실행 → 랜덤 키 생성 후 파일에 저장
    SECRET_KEY = get_random_secret_key()
    SECRET_FILE.write_text(SECRET_KEY)
    # (권장) 권한을 600 으로 제한
    SECRET_FILE.chmod(0o600)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "jazzmin",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "core"
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "core.middleware.CurrentUserMiddleware",
]

ROOT_URLCONF = 'translate_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'translate_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

BUILD_ROOT = BASE_DIR / "build"
BUILD_URL  = "/build/"

JAZZMIN_SETTINGS = {
    "site_title": "Dashboard",
    "site_header": "DCSS Translation",
    "topmenu_links": [
        {
            "name": "Generate translation file",
            "url": "generate-translation-file",
            "permissions": ["core.view_matcher"],
        },
        {"name": "User statistics", "url": "user-statistics", "permissions": ["auth.view_user"]},
    ],
}

# ① 기본 규칙 ― 아무 오리진에서든 GET/HEAD/OPTIONS 허용
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_METHODS = ["GET", "OPTIONS", "HEAD"]

# ② build/ 경로만 CORS 헤더를 달고 싶다면:
CORS_URLS_REGEX = r"^/build/.*$"
